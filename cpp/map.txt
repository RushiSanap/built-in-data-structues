		Iterators
		
begin()		Returns an iterator pointing to the first element in the map
end()		Returns an iterator pointing to the theoretical element that follows the last element in the map
rbegin() 	Returns a reverse iterator pointing to the last element in the map (reverse beginning). It moves from last to first element
rend() 		Returns a reverse iterator pointing to the theoretical element preceding the first element in the map (considered as reverse end)
cbegin()	Returns a constant iterator pointing to the first element in the map.
cend()		Returns a constant iterator pointing to the theoretical element that follows the last element in the map.
crbegin()	Returns a constant reverse iterator pointing to the last element in the map (reverse beginning). It moves from last to first element
crend()		Returns a constant reverse iterator pointing to the theoretical element preceding the first element in the map (considered as reverse end)


		Capacity
		
size()		Returns the number of elements in the map.
max_size()	Returns the maximum number of elements that the map can hold.
empty() 	Returns whether the container is empty.
		

		Element Access
		
at(g)		Returns a value corresponding to key specified key.

		Modifiers
find()		Returns an iterator to the element with key-value ‘g’ in the map if found, else returns the iterator to end.
count()		If key is present return 1 else return 1.
insert()	Insert elements with a particular key in the map container.
erase()		Used to erase elements from the container
swap()		It is used to swap the contents of one map with another map of same type. Sizes may differ.
clear()		It is used to remove all the elements of the map container
emplace()	It extends the container by inserting new element at position
emplace_back()	It is used to insert a new element into the map container, the new element is added to the end of the map

		Operators
[]		value corresponding to the key
=		assing to the new map
